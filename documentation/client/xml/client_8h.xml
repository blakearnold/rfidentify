<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="client_8h" kind="file">
    <compoundname>client.h</compoundname>
    <includes refid="reader_8h" local="yes">reader.h</includes>
    <includes local="no">avahi-client/client.h</includes>
    <includes local="no">avahi-common/simple-watch.h</includes>
    <includes local="no">pthread.h</includes>
    <includedby refid="client_8c" local="yes">client/client.c</includedby>
    <includedby refid="rfid__reader__handler_8c" local="yes">client/rfid_reader_handler.c</includedby>
    <incdepgraph>
      <node id="159">
        <label>reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>avahi-common/simple-watch.h</label>
      </node>
      <node id="162">
        <label>avahi-client/client.h</label>
      </node>
      <node id="158">
        <label>client/client.h</label>
        <link refid="client.h"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>pthread.h</label>
      </node>
      <node id="160">
        <label>list.h</label>
        <link refid="list_8h"/>
      </node>
      <node id="161">
        <label>ftdi.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="167">
        <label>client/rfid_reader_handler.c</label>
        <link refid="rfid__reader__handler_8c"/>
      </node>
      <node id="166">
        <label>client/client.c</label>
        <link refid="client_8c"/>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>client/client.h</label>
        <link refid="client.h"/>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structrfid__server__info" prot="public">rfid_server_info</innerclass>
    <innerclass refid="structclient__config" prot="public">client_config</innerclass>
    <innerclass refid="structavahi__callback__params" prot="public">avahi_callback_params</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="client_8h_1a2fe5f2e559b4f539c687ab4121a4a7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* reader_function</definition>
        <argsstring>(void *args)</argsstring>
        <name>reader_function</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>RFID reading loop which polls for identifications. Look for <ref refid="rfid__reader__handler_8c" kindref="compound">rfid_reader_handler.c</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>PThread. Initializes an RFID device, if it exists, and begins a tag reading loop. <simplesect kind="see"><para><ref refid="rfid__reader__handler_8c_1a82be151f29c7660d364ab0cc5f97a3af" kindref="member">SLEEP_BTWN_SEARCH</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>struct <ref refid="structclient__config" kindref="compound">client_config</ref> - The current configuration of the client. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Should not return, if so, error.  abstract RFID differences from this implementation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/willi/Dropbox/Columbia/Research/src/rfidentify/client/client.h" line="51" bodyfile="/home/willi/Dropbox/Columbia/Research/src/rfidentify/client/rfid_reader_handler.c" bodystart="164" bodyend="215"/>
        <references refid="reader_8h_1a1ceb0e81b845fdcd1b8371e92229a13b" compoundref="reader_8h" startline="18">BEEP</references>
        <references refid="reader_8c_1a44b115e0bf4e92f6bfe2dcff067e49f5" compoundref="reader_8c" startline="40" endline="71">find_all_readers</references>
        <references refid="list_8c_1a3dc5b8dea5507c3b0a37fde8c1fcae54" compoundref="list_8c" startline="23" endline="35">list_create</references>
        <references refid="list_8c_1ac32ad3e6f4af784d86b011c190aad38b" compoundref="list_8c" startline="242" endline="257">list_destroy</references>
        <references refid="list_8c_1a35885fd30f031789e0844bb693b0b8fc" compoundref="list_8c" startline="569" endline="593">list_pop</references>
        <references refid="list_8c_1a6b2f0bae5223fb66771708236b2a99ef" compoundref="list_8c" startline="104" endline="124">list_size</references>
        <references refid="reader_8c_1a439267aa086867cfa328252e98372fff" compoundref="reader_8c" startline="73" endline="121">reader_connect</references>
        <references refid="rfid__reader__handler_8c_1ad7e398d96716aecafb8fdad3c4d64f32" compoundref="rfid__reader__handler_8c" startline="119" endline="153">reader_poll_loop</references>
        <references refid="rfid__reader__handler_8c_1a82be151f29c7660d364ab0cc5f97a3af" compoundref="rfid__reader__handler_8c" startline="25">SLEEP_BTWN_SEARCH</references>
      </memberdef>
      <memberdef kind="function" id="client_8h_1a0631c3c52c14996e91db6a5618d3d2b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* avahi_function</definition>
        <argsstring>(void *args)</argsstring>
        <name>avahi_function</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>mDNS handling loop which looks for RFIDentify servers. Look for <ref refid="avahi__dns__handler_8c" kindref="compound">avahi_dns_handler.c</ref> </para>        </briefdescription>
        <detaileddescription>
<para>PThread. Initializes an mDNS Avahi service, and listens for relevant services. Updates the server info configuration as necessary. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>struct <ref refid="structclient__config" kindref="compound">client_config</ref>, Relevant configuration settings. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Should not return, if so, error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/willi/Dropbox/Columbia/Research/src/rfidentify/client/client.h" line="54" bodyfile="/home/willi/Dropbox/Columbia/Research/src/rfidentify/client/avahi_dns_handler.c" bodystart="225" bodyend="275"/>
        <references refid="avahi__dns__handler_8c_1a0a5dcec1ec57a60846e370d34a003a4a" compoundref="avahi__dns__handler_8c" startline="118" endline="195">browse_callback</references>
        <references refid="structavahi__callback__params_1aa13ccffa23fd1cfe24c33471fbc1f57f" compoundref="client_8h" startline="46">avahi_callback_params::client</references>
        <references refid="avahi__dns__handler_8c_1a8abc8d2d0f6f9a171d8c02d6d9285fbf" compoundref="avahi__dns__handler_8c" startline="203" endline="216">client_callback</references>
        <references refid="structavahi__callback__params_1abb59d3961e7409275a1cefae9915dc23" compoundref="client_8h" startline="47">avahi_callback_params::config</references>
        <references refid="structavahi__callback__params_1a0a7dd205aeb2879ac6e618c6da3b7477" compoundref="client_8h" startline="45">avahi_callback_params::poll</references>
      </memberdef>
      <memberdef kind="function" id="client_8h_1aeb76476d4872310249ea0634068eff67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_config</definition>
        <argsstring>(struct client_config *client_config, const char *filename)</argsstring>
        <name>read_config</name>
        <param>
          <type>struct <ref refid="structclient__config" kindref="compound">client_config</ref> *</type>
          <declname>client_config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Configures a client given a configuration file. </para>        </briefdescription>
        <detaileddescription>
<para>Configures a client given a configuration file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="structclient__config" kindref="compound">client_config</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The destination configuration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The file from which to read the config. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success. non-zero otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/willi/Dropbox/Columbia/Research/src/rfidentify/client/client.h" line="57" bodyfile="/home/willi/Dropbox/Columbia/Research/src/rfidentify/client/client.c" bodystart="35" bodyend="71"/>
        <references refid="structclient__config_1ab84ac38acfafb6eeb2246cd64935348d" compoundref="client_8h" startline="36">client_config::action</references>
        <references refid="structclient__config_1ac269be8b91ae4b24df48de5d8ad7e7a7" compoundref="client_8h" startline="34">client_config::config_file</references>
        <references refid="config_8c_1a54a4b949509d289e47841a725146ce4e" compoundref="config_8c" startline="50" endline="69">config_get</references>
        <references refid="structclient__config_1a2963f5361ea992a1320576a9690b85e1" compoundref="client_8h" startline="37">client_config::last_tag</references>
        <references refid="structclient__config_1a0abaf4b5d42c4e5d19190035fade3599" compoundref="client_8h" startline="39">client_config::lock</references>
        <references refid="structclient__config_1a66f5677d5f62c2f750d8fe40411d4139" compoundref="client_8h" startline="35">client_config::mode</references>
        <references refid="client_8c_1abafd8197d150530827f5ab09c47c28c3" compoundref="client_8c" startline="79" endline="172">read_config_servers</references>
        <references refid="structclient__config_1a868bc61b634e17a030f7adf4723a8052" compoundref="client_8h" startline="38">client_config::servers</references>
      </memberdef>
      <memberdef kind="function" id="client_8h_1abafd8197d150530827f5ab09c47c28c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlist" kindref="compound">list</ref> *</type>
        <definition>list* read_config_servers</definition>
        <argsstring>(struct client_config *client_config)</argsstring>
        <name>read_config_servers</name>
        <param>
          <type>struct <ref refid="structclient__config" kindref="compound">client_config</ref> *</type>
          <declname>client_config</declname>
        </param>
        <briefdescription>
<para>Configures static servers from a configuration file. </para>        </briefdescription>
        <detaileddescription>
<para>Configures static servers from a configuration file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="structclient__config" kindref="compound">client_config</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The config, including filename, from which to determine the servers. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of servers, or NULL on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/willi/Dropbox/Columbia/Research/src/rfidentify/client/client.h" line="60" bodyfile="/home/willi/Dropbox/Columbia/Research/src/rfidentify/client/client.c" bodystart="79" bodyend="172"/>
        <references refid="structclient__config_1ac269be8b91ae4b24df48de5d8ad7e7a7" compoundref="client_8h" startline="34">client_config::config_file</references>
        <references refid="config_8c_1a52d0c5748deeda66a4f4fceb3ce34bbe" compoundref="config_8c" startline="78" endline="144">config_get_all</references>
        <references refid="list_8c_1a3dc5b8dea5507c3b0a37fde8c1fcae54" compoundref="list_8c" startline="23" endline="35">list_create</references>
        <references refid="list_8c_1ac32ad3e6f4af784d86b011c190aad38b" compoundref="list_8c" startline="242" endline="257">list_destroy</references>
        <references refid="list_8h_1ace8d99da5f3e4a9ac595791be1ad5819" compoundref="list_8h" startline="91">list_foreach_entry</references>
        <references refid="list_8c_1aeeb96d95e199da5b6816f6eb7c49d0f0" compoundref="list_8c" startline="96" endline="99">list_is_empty</references>
        <references refid="list_8c_1acdcbb59aa0ed0829f03fefa7553f80d2" compoundref="list_8c" startline="394" endline="402">list_nth</references>
        <references refid="list_8c_1a35885fd30f031789e0844bb693b0b8fc" compoundref="list_8c" startline="569" endline="593">list_pop</references>
        <references refid="list_8c_1ac678bd305e69ff31bb9644b5cfabac0b" compoundref="list_8c" startline="535" endline="559">list_push</references>
        <references refid="list_8c_1a6b2f0bae5223fb66771708236b2a99ef" compoundref="list_8c" startline="104" endline="124">list_size</references>
        <references refid="structrfid__server__info_1a0abaf4b5d42c4e5d19190035fade3599" compoundref="client_8h" startline="25">rfid_server_info::lock</references>
        <references refid="structrfid__server__info_1a5ac083a645d964373f022d03df4849c8" compoundref="client_8h" startline="29">rfid_server_info::name</references>
        <references refid="structrfid__server__info_1a8e0798404bf2cf5dabb84c5ba9a4f236" compoundref="client_8h" startline="27">rfid_server_info::port</references>
        <references refid="structrfid__server__info_1a546501ce6bc6047dd53694411b4aa185" compoundref="client_8h" startline="28">rfid_server_info::stable</references>
        <references refid="string__utils_8c_1ad53f748f94f536ae4e1290a3ff1ac501" compoundref="string__utils_8c" startline="66" endline="93">string_split</references>
        <references refid="structrfid__server__info_1ab135e5154c1828bef226a3df98ee3333" compoundref="client_8h" startline="26">rfid_server_info::url</references>
        <referencedby refid="client_8h_1aeb76476d4872310249ea0634068eff67" compoundref="client_8c" startline="35" endline="71">read_config</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This application reads RFID tags and queries a server with the tag ID. The server is discovered using Avahi/mDNS.</para><para><simplesect kind="author"><para>Willi Ballenthin </para></simplesect>
<simplesect kind="date"><para>Spring, 2010 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reader_8h" kindref="compound">reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avahi-client/client.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avahi-common/simple-watch.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structrfid__server__info" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrfid__server__info" kindref="compound" tooltip="Defines a relevant configuration of an RFID server.">rfid_server_info</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="structrfid__server__info_1a0abaf4b5d42c4e5d19190035fade3599" refkind="member"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/><ref refid="structrfid__server__info_1a0abaf4b5d42c4e5d19190035fade3599" kindref="member" tooltip="Protects modifications across threads.">lock</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="structrfid__server__info_1ab135e5154c1828bef226a3df98ee3333" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structrfid__server__info_1ab135e5154c1828bef226a3df98ee3333" kindref="member" tooltip="RFID server url.">url</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27" refid="structrfid__server__info_1a8e0798404bf2cf5dabb84c5ba9a4f236" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrfid__server__info_1a8e0798404bf2cf5dabb84c5ba9a4f236" kindref="member" tooltip="RFID server port.">port</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="structrfid__server__info_1a546501ce6bc6047dd53694411b4aa185" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrfid__server__info_1a546501ce6bc6047dd53694411b4aa185" kindref="member" tooltip="True if the URL will not change. Eg. false if it may be modified by mDNS.">stable</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="structrfid__server__info_1a5ac083a645d964373f022d03df4849c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structrfid__server__info_1a5ac083a645d964373f022d03df4849c8" kindref="member" tooltip="Unique name of the given server. Provided by mDNS.">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structclient__config" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient__config" kindref="compound" tooltip="Defines a client configuration context.">client_config</ref><sp/>{</highlight></codeline>
<codeline lineno="34" refid="structclient__config_1ac269be8b91ae4b24df48de5d8ad7e7a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structclient__config_1ac269be8b91ae4b24df48de5d8ad7e7a7" kindref="member" tooltip="Location of configuration file.">config_file</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="35" refid="structclient__config_1a66f5677d5f62c2f750d8fe40411d4139" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structclient__config_1a66f5677d5f62c2f750d8fe40411d4139" kindref="member" tooltip="Current mode of client.">mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36" refid="structclient__config_1ab84ac38acfafb6eeb2246cd64935348d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structclient__config_1ab84ac38acfafb6eeb2246cd64935348d" kindref="member" tooltip="Server REST action.">action</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="structclient__config_1a2963f5361ea992a1320576a9690b85e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structclient__config_1a2963f5361ea992a1320576a9690b85e1" kindref="member" tooltip="Last tag encountered by reader.">last_tag</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="structclient__config_1a868bc61b634e17a030f7adf4723a8052" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structlist" kindref="compound">list</ref><sp/>*<ref refid="structclient__config_1a868bc61b634e17a030f7adf4723a8052" kindref="member" tooltip="List of rfid_server_info structures.">servers</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structclient__config_1a0abaf4b5d42c4e5d19190035fade3599" refkind="member"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/><ref refid="structclient__config_1a0abaf4b5d42c4e5d19190035fade3599" kindref="member" tooltip="Protects modifications, especially last_tag.">lock</ref>;<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structavahi__callback__params" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structavahi__callback__params" kindref="compound" tooltip="Aggregation of various parameters to Avahi callbacks.">avahi_callback_params</ref><sp/>{</highlight></codeline>
<codeline lineno="45" refid="structavahi__callback__params_1a0a7dd205aeb2879ac6e618c6da3b7477" refkind="member"><highlight class="normal"><sp/><sp/>AvahiSimplePoll<sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structavahi__callback__params_1a0a7dd205aeb2879ac6e618c6da3b7477" kindref="member" tooltip="Current poll object.">poll</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="structavahi__callback__params_1aa13ccffa23fd1cfe24c33471fbc1f57f" refkind="member"><highlight class="normal"><sp/><sp/>AvahiClient<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structavahi__callback__params_1aa13ccffa23fd1cfe24c33471fbc1f57f" kindref="member" tooltip="Currently working client.">client</ref>;<sp/></highlight></codeline>
<codeline lineno="47" refid="structavahi__callback__params_1abb59d3961e7409275a1cefae9915dc23" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient__config" kindref="compound" tooltip="Defines a client configuration context.">client_config</ref><sp/>*<ref refid="structavahi__callback__params_1abb59d3961e7409275a1cefae9915dc23" kindref="member" tooltip="Client configuration status.">config</ref>;<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="client_8h_1a2fe5f2e559b4f539c687ab4121a4a7be" kindref="member" tooltip="RFID reading loop which polls for identifications. Look for rfid_reader_handler.c...">reader_function</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*args);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="avahi__dns__handler_8c_1a0631c3c52c14996e91db6a5618d3d2b8" kindref="member" tooltip="mDNS handling loop which looks for RFIDentify servers. Look for avahi_dns_handler...">avahi_function</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*args);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="client_8c_1aeb76476d4872310249ea0634068eff67" kindref="member" tooltip="Configures a client given a configuration file.">read_config</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient__config" kindref="compound" tooltip="Defines a client configuration context.">client_config</ref><sp/>*<ref refid="structclient__config" kindref="compound" tooltip="Defines a client configuration context.">client_config</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="structlist" kindref="compound">list</ref><sp/>*<ref refid="client_8c_1abafd8197d150530827f5ab09c47c28c3" kindref="member" tooltip="Configures static servers from a configuration file.">read_config_servers</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient__config" kindref="compound" tooltip="Defines a client configuration context.">client_config</ref><sp/>*<ref refid="structclient__config" kindref="compound" tooltip="Defines a client configuration context.">client_config</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/willi/Dropbox/Columbia/Research/src/rfidentify/client/client.h"/>
  </compounddef>
</doxygen>
